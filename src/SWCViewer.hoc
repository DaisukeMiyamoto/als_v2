{load_file("nrngui.hoc")}
{load_file("stdlib.hoc")}
{load_file("CellSwc.hoc")}
{load_file("areaList.hoc")}
rotationPerStep = 0.006

/*--- make cell ---*/

objref cell[100]
/*
strdef filename
for(i=0;i<100;i+=1){
    sprint(filename,"../input/swc/rn/orn%04d.swc",i)
    cell[i] = new CellSwc(filename)
    cell[i].translation(i/2.0*sin(i/10.0),0.0,i/2.0*cos(i/10.0))
}
*/



/*--- insert mechanism ---*/
objref shape
shape = new Shape()


func paint_neuron(){local i, s_color, n_color,counter localobj c
    strdef str
    c = $o1
    s_color = $2
    n_color = $3
    //$o1 CellSwc
    //s_color synapse color
    //n_color neuron color(dendrite color)
    counter = 0
    counter2 = 0
    for(i=0;i<c.SectionNum;i=i+1){
	parentType = c.Type.x[c.pID.x[i]]
	if((c.Type.x[i] == 7)&&(parentType == 7)){
	    c.Dend[i] shape.color(s_color)
	    counter +=1
	}else{
	    c.Dend[i] shape.color(n_color)
	}
	if(c.Type.x[i]==7){
	    counter2 +=1
	}
    }
    //c.all.printnames()
    c.Dend[0] str = secname()
    printf("%s %d\n",str,counter)  
    print counter2
    return counter
    
}


//c1 = paint_neuron(cell, 2,2)

shape.show(0)
sh.exec_menu("Shape Plot")
sh.exec_menu("Space Plot")
//sh.view(-100, -100,200, 200,50,50,1024,1024)
