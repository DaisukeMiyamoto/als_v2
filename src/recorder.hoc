//************************************************
// FILE NAME : recorder.hoc
// 2015.05.13
// Heewon Park
//************************************************

//************************************************
// MODIFICATION HISTORY
//************************************************
//
//
//

//************************************************
// FUNCTION LIST
//************************************************
//
//************************************************

objref tvec, idvec
proc spikerecord(){local i localobj nc, nil, nclist
    tvec    = new Vector()
    idvec   = new Vector()
    nclist = new List()

    for(i = 0; i<pns.count();i+=1){
	pns.o(i).Dend[21] nc = new NetCon(&v(0.5),nil)
	nc.record(tvec,idvec,nc.srcgid)
	nclist.append(nc)
    }
    for(i = 0; i<lns.count();i+=1){
	lns.o(i).Dend[21] nc = new NetCon(&v(0.5),nil)
	nc.record(tvec,idvec,nc.srcgid)
	nclist.append(nc)
    }
    for(i = 0; i<rns.count();i+=1){
	rns.o(i).Dend[0] nc = new NetCon(&v(0.5),nil)
	nc.record(tvec,idvec,nc.srcgid)
	nclist.append(nc)
    }
}
/*
proc spikeout(){local i, rank localobj f
    strdef fn
    f = new File()

    for rank = 0, pc.nhost-1{
	sprint(fn,"./record/%dSpikeTiming.dat",pns.o(i).nid)
	f.wopen(fn)
	f.printf("\ntime\t cell\n")
	for i = 0, tvec.size-1{
	    f.printf("%g\t %d\n",tvec.x[i],idvec.x[i])
	}
    }
    
}
*/


objref PNvolt_vec
objref LNvolt_vec
objref PNvolt_vecs[4000]
objref LNvolt_vecs[4000]
objref RNvolt_vecs[6000]

objref volt_tvec

proc setVoltageRecord(){local i,j
    for i= 0, rns.count()*3-1{
	RNvolt_vecs[i] = new Vector()
    }
    for i= 0, 4000-1{
	PNvolt_vecs[i] = new Vector()
	LNvolt_vecs[i] = new Vector()
    }
    volt_tvec = new Vector()
    volt_tvec.record(&t)

    for(j = 0; j<pns.count();j+=1){
	//printf("PN record(id:%d)\n",(pc.id))
	//printf("pns.count %d#\n",pns.count())
	print j
	if(j == 0){
	    PNvolt_vec = new Vector()
	    //PNvolt_vec.record(&projection.Dend[1211].v(0.5))
	    PNvolt_vec.record(&pns.o(j).Dend[475].v(0.5))
	    //printf("pns.o(%d).SynNumerList.size(): %d#\n",j,pns.o(j).SynNumberList.size())
	    for i=0, pns.o(j).SynNumberList.size()-1{
		//print pns.o(j).SynNumberList.x[i]
		PNvolt_vecs[i].record(&pns.o(j).Dend[pns.o(j).SynNumberList.x[i]].v(0.5))
	    }
	}
	//printf("PN record(id:%d)END\n",(pc.id))
    }

    for(j = 0; j<lns.count();j+=1){
	//printf("LN record(id:%d)\n",(pc.id))
	//printf("lns.count:%d#\n",lns.count())
	if(j == 0){
	    LNvolt_vec = new Vector()			    
	    if(lns.o(j).swcid == 0){
		LNvolt_vec.record(&lns.o(j).Dend[21706].v(0.5))
	    }else if(lns.o(j).swcid == 1){
		LNvolt_vec.record(&lns.o(j).Dend[11197].v(0.5))
	    }
	    //printf("lns.o(%d).SynNumerList.size(): %d#\n",j,lns.o(j).SynNumberList.size())
	    for i=0, lns.o(j).SynNumberList.size()-1{
		LNvolt_vecs[i].record(&lns.o(j).Dend[lns.o(j).SynNumberList.x[i]].v(0.5))
	    }
	}
	//printf("LN record(id:%d)END\n",(pc.id))
    }
    //printf("RN record(id:%d)\n",(pc.id))
    for(j = 0; j<rns.count();j+=1){
	//printf("RN record(id:%d)\n",(pc.id))
	//printf("rns.count %d#\n",rns.count())
	//print "ERROR CHECK SETVOLATAGERECORD",1
	if(j==0){
	    RNvolt_vecs[0].record(&rns.o(j).Dend[0].v(0.5))
	    RNvolt_vecs[1].record(&rns.o(j).Dend[60].v(0.5))
	    RNvolt_vecs[2].record(&rns.o(j).Dend[120].v(0.5))
	}
	//print "ERROR CHECK SETVOLATAGERECORD",2
    }
    pc.barrier()
}

objref PNgaba_vecs[50]
objref gaba_tvec
proc setGABArecord(){local i, j
    for i= 0, 50-1{
	PNgaba_vecs[i] = new Vector()
    }
    gaba_tvec = new Vector()
    gaba_tvec.record(&t)
    
    for(j=0; j<gabalist.count();j+=1){
	PNgaba_vecs[j].record(&gabalist.o(j).pre)
    }
    pc.barrier()
}

objref PNdummy_vecs[50]
objref dummy_tvec
proc setDummyRecord(){local i, j
    for i= 0, 50-1{
	PNdummy_vecs[i] = new Vector()
    }
    dummy_tvec = new Vector()
    dummy_tvec.record(&t)
    
    for(j=0; j<dummylist.count();j+=1){
	PNdummy_vecs[j].record(&dummylist.o(j).pre)
    }
    pc.barrier()
}



strdef FPRINT_DIR
if(IS_SUPERCOMPUTER == 1){
    FPRINT_DIR = "./"
}else{
    FPRINT_DIR = "../result/record/"
}
print FPRINT_DIR

proc fprintVoltageRecord(){localobj mt, file,mt2, file2
    strdef filename
    for(j = 0; j<pns.count();j+=1){
	if(j == 0){
	    mt = new Matrix()
	    file = new File()
	    mt.resize(volt_tvec.size(),2)
	    mt.setcol(0,volt_tvec)
	    mt.setcol(1,PNvolt_vec)
	    sprint(filename,"%s%dVolt.txt",FPRINT_DIR,pns.o(j).nid)
	    file.wopen(filename)
	    mt.fprint(file,"%5.5f\t")
	    file.close()

	    file2 = new File()
	    mt2 = new Matrix()
	    mt2.resize(volt_tvec.size(),pns.o(j).SynNumberList.size()+1)
	    mt2.setcol(0,volt_tvec)
	    for i=0, pns.o(j).SynNumberList.size()-1{
		mt2.setcol(i+1,PNvolt_vecs[i])
	    }
	    sprint(filename,"%s%dVolt_FromRN.txt",FPRINT_DIR,pns.o(j).nid)
	    file2.wopen(filename)
	    mt2.fprint(file2,"%5.5f\t")
	    file2.close()
	}
    }
    for(j = 0; j<lns.count();j+=1){
	if(j == 0){
	    mt = new Matrix()
	    file = new File()
	    mt.resize(volt_tvec.size(),2)
	    mt.setcol(0,volt_tvec)
	    mt.setcol(1,LNvolt_vec)
	    sprint(filename,"%s%dVolt.txt",FPRINT_DIR,lns.o(j).nid)
	    file.wopen(filename)
	    mt.fprint(file,"%5.5f\t")
	    file.close()

	    file2 = new File()
	    mt2 = new Matrix()
	    mt2.resize(volt_tvec.size(),lns.o(j).SynNumberList.size()+1)
	    mt2.setcol(0,volt_tvec)
	    for i=0, lns.o(j).SynNumberList.size()-1{
		mt2.setcol(i+1,LNvolt_vecs[i])
	    }
	    sprint(filename,"%s%dVolt_FromRN.txt",FPRINT_DIR,lns.o(j).nid)
	    file2.wopen(filename)
	    mt2.fprint(file2,"%5.5f\t")
	    file2.close()
	}
    }
    for(j = 0; j<rns.count();j+=1){
	if(j==0){
	    mt = new Matrix()
	    file = new File()
	    //mt.resize(volt_tvec.size(),rns.count + 1)
	    mt.resize(volt_tvec.size(),4)
	    mt.setcol(0,volt_tvec)
	    mt.setcol(1,RNvolt_vecs[0])
	    mt.setcol(2,RNvolt_vecs[1])
	    mt.setcol(3,RNvolt_vecs[2])
	    
	    sprint(filename,"%s%dVolt.txt",FPRINT_DIR,rns.o(j).nid)
	    file.wopen(filename)
	    mt.fprint(file,"%5.5f\t")
	    file.close()
	}
    }
}


proc fprintGABArecord(){localobj mt, file
    strdef filename
    mt = new Matrix()
    for(j = 0; j<gabalist.count();j+=1){
	file = new File()
	mt.resize(gaba_tvec.size(),2)
	mt.setcol(0,gaba_tvec)
	mt.setcol(1,PNgaba_vecs[j])
	sprint(filename,"%s%d_%dGABA.txt",FPRINT_DIR,pc.id,j)
	file.wopen(filename)
	mt.fprint(file,"%5.5f\t")
	file.close()
    }
}

proc fprintDummyRecord(){localobj mt, file
    strdef filename
    mt = new Matrix()
    for(j = 0; j<dummylist.count();j+=1){
	file = new File()
	mt.resize(dummy_tvec.size(),2)
	mt.setcol(0,dummy_tvec)
	mt.setcol(1,PNdummy_vecs[j])
	sprint(filename,"%s%d_%dDummy.txt",FPRINT_DIR,pc.id,j)
	file.wopen(filename)
	mt.fprint(file,"%5.5f\t")
	file.close()
    }
}
